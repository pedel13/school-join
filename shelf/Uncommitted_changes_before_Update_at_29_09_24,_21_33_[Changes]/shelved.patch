Index: assets/contact.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*##### START OF AddContact Overlay section #####*/\n#contactRightHeadSectionMobile{\n    column-gap: 16px;\n}\n\n.backArrow {\n    margin-right: 24px;\n}\n\n.contactOverlayWrapper {\n    width: 100%;\n    min-height: 592px !important;\n    display: flex;\n    justify-content: center;\n}\n\n.contactOverlayWrapperMobile {\n    display: none !important;\n}\n\n.contactOverlayLeft {\n    background-color: #2A3647;\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n    width: 467px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    flex-direction: column;\n    padding: 130px 0 40px 40px;\n}\n\n.contactOverlayLeft > * {\n    margin-bottom: 24px;\n    color: #ffffff;\n}\n\n.contactOverlayWrapperMobile {\n    width: 80%;\n    background-color: #ffffff;\n    border-radius: 31px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.contactOverlayLeftMobile {\n    display: none;\n}\n\n.contactJoinLogo {\n    width: 56px;\n    height: 66px;\n}\n\n.addContactFormAvatar {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n}\n\ninput#newContactName,\ninput#newContactMail,\ninput#newContactPhone {\n    width: 402px;\n    height: 56px;\n    border-radius: 10px;\n    border: 2px solid lightgray;\n    padding: 4px 4px 4px 16px;\n    margin-bottom: 24px;\n}\n\n.addContactForm > form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n}\n\n.addContactForm > form > * {\n    margin-bottom: 16px;\n}\n\n.close {\n    display: flex;\n    justify-content: flex-end;\n    height: 120px;\n    margin: 16px 16px 0 0;\n}\n\n.closeMobile {\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    height: 36px;\n    margin: 16px 16px 0 0;\n}\n\n.close-img {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    height: 40px;\n    width: 40px;\n}\n\n.avatar {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n}\n\n.avatar-img {\n    height: 134px;\n    width: 134px;\n}\n\n.contactOverlayRight {\n    background-color: #ffffff;\n    width: 745px;\n}\n\n\n.createContact {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 24px;\n    margin-right: 62px;\n}\n\n.spaceDivContacts {\n    width: 65%;\n}\n\n.createContactButton {\n    display: flex;\n    justify-content: flex-start !important;\n    align-items: center;\n}\n\n.createContactButton > button:nth-of-type(2) {\n    margin-left: 12px;\n}\n\n.clearNewContact {\n    background-color: #ffffff !important;\n    color: #2A3647 !important;\n    width: 130px !important;\n    border: 1px solid #2A3647 !important;\n}\n\n.clearNewContact,\n.createNewContact {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 24px;\n    width: 200px;\n    height: 50px;\n    border-radius: 10px;\n    background: #2A3647;\n    color: #fff;\n    font-size: 16px;\n    font-weight: bold;\n}\n/*##### END OF AddContact Overlay section #####*/\n\ninput[required] {\n    border-color: red;\n}\n\n#contactsMain {\n    display: flex;\n    margin-top: 1px;\n}\n\n#contactLeft {\n    background: #fff;\n    min-width: 456px;\n    height: 100vh;\n    overflow-y: auto;\n    padding-bottom: 60px;\n}\n\n.contactsMainWrapper {\n    overflow-y: hidden !important;\n    width: 100%;\n}\n\n.contactList {\n    padding: 0 24px 32px 16px;\n    max-height: 85%;\n    overflow-y: auto;\n    overflow-x: hidden;\n}\n\n.contactList:last-of-type {\n    padding-bottom: 48px;\n}\n\n.iconCircleContactPosition {\n    height: 1px;\n}\n\n.contactListWrapper {\n    padding-bottom: 48px;\n}\n\n.contactLetter {\n    width: 352px;\n    font-size: 24px;\n    font-weight: normal;\n    display: flex;\n    padding: 17px 36px;\n    border-bottom: 1px solid #d7d7d7;\n}\n\n.activeContact {\n    background-color: #2A3647;\n    color: #ffffff;\n    border-radius: 8px;\n    height: 100%;\n}\n\n.namesList {\n    display: flex;\n    flex-direction: column;\n    font-size: 24px;\n    padding: 8px 0 0 8px;\n    border-radius: 10px;\n    cursor: pointer;\n}\n\n.contactItem {\n    width: 352px;\n    font-size: 20px;\n    font-weight: 400;\n    padding: 15px 24px;\n}\n\n.innerContactDetailWrapper {\n    display: flex;\n}\n\n#userProfile {\n    padding-right: 32px;\n}\n\n.emailLink {\n    color: #007cee;\n    font-size: 16px;\n}\n\n.newContactButton {\n    display: flex;\n    justify-content: center;\n    margin-top: 32px;\n}\n\nbutton#newContact {\n    width: 90%;\n    height: 50px;\n    border-radius: 10px;\n    color: #ffffff;\n    font-size: 19px;\n    font-weight: bold;\n    border: none;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    background-color: #2A3647;\n}\n\n#contactsRight {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin: 80px 0 0 40px;\n}\n\n.spacerDiv {\n    height: 100%;\n    width: 5px;\n    background: #29ABE2;\n    border-radius: 3px;\n}\n\n.spacerDivLying {\n    height: 5px;\n    width: 90px;\n    background: #29ABE2;\n    border-radius: 3px;\n}\n\n#contactRightHeadSection {\n    width: 80%;\n    height: 64px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 32px;\n    margin-bottom: 40px;\n}\n\n#contactTitle {\n    width: 80%;\n    display: flex;\n    gap: 60px;\n}\n\n#contactAvatar {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 120px;\n    width: 120px;\n    border-radius: 50%;\n    border: 5px solid #ffffff;\n}\n\n.credentialsCircle {\n    color: #ffffff;\n    height: 110px;\n    width: 119px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.currentName {\n    font-size: 47px;\n    font-weight: 500;\n    margin-bottom: 12px;\n}\n\n#editButtons {\n    display: flex;\n    gap: 32px;\n    align-items: center;\n    justify-content: flex-start;\n}\n\n#editCurrentContact,\n#deleteCurrentContact {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n#editCurrentContact:hover,\n#deleteCurrentContact:hover {\n    cursor: pointer;\n    color: #0100FF;\n}\n\n#contactDetails {\n    margin-top: 40px;\n    column-gap: 24px;\n    font-size: 16px;\n}\n\n#contactDetails > p {\n    font-size: 22px;\n}\n\n#contactDetails > * {\n    margin-bottom: 32px;\n}\n\n.mailLink:hover,\n.phoneLink:hover {\n    cursor: pointer;\n    color: #007cee;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/contact.css b/assets/contact.css
--- a/assets/contact.css	(revision 10bb45c4781c7cdfdb68de9e5e1e94bfd45cc93c)
+++ b/assets/contact.css	(date 1727637934339)
@@ -12,6 +12,7 @@
     min-height: 592px !important;
     display: flex;
     justify-content: center;
+    top: 25%;
 }
 
 .contactOverlayWrapperMobile {
@@ -167,8 +168,11 @@
     font-size: 16px;
     font-weight: bold;
 }
+
 /*##### END OF AddContact Overlay section #####*/
 
+
+
 input[required] {
     border-color: red;
 }
Index: js/contact.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* Local variables */\nlet localContactArray;\nlet alphabet = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n/**\n * Creates new Contact-Data and saves them to the Database\n * @function addContact\n */\nasync function addContact(event) {\n    event.preventDefault(event);\n    let contactName = document.getElementById('newContactName').value;\n    let contactMail = document.getElementById('newContactMail').value;\n    let contactPhone = document.getElementById('newContactPhone').value;\n    let nameCharts = [];\n    nameCharts = splitName(contactName);\n    let contactColor = setColor();\n    await setContactToFirebase(contactName, contactMail, contactPhone, nameCharts, contactColor);\n    clearNewContactForm();\n    closeContactOverlay(event);\n    fetchContacts();\n}\n\nfunction setColor() {\n    let randomNumber = Math.floor(Math.random() * 7);\n    let color = '';\n    switch (randomNumber) {\n        case 0:\n            color = \"bg-orange\";\n            break;\n        case 1:\n            color = \"bg-purple\";\n            break;\n        case 2:\n            color = \"bg-blue\";\n            break;\n        case 3:\n            color = \"bg-pink\";\n            break;\n        case 4:\n            color = \"bg-yellow\";\n            break;\n        case 5:\n            color = \"bg-green\";\n            break;\n        case 6:\n            color = \"bg-dark-blue\";\n            break;\n        case 7:\n            color = \"bg-red\";\n            break;\n        default:\n            break;\n    }\n    return color;\n}\n\nfunction splitName(data) {\n    let cdata = data.split(\" \");\n    let firstName = cdata[0];\n    let secondName = cdata[1];\n    let nameCharts = [];\n    let firstChart = firstName.charAt(0);\n    let firstChartUpperCase = firstChart.toUpperCase();\n    let secondChart = secondName.charAt(0);\n    let secondChartUpperCase = secondChart.toUpperCase();\n    nameCharts.push(firstChartUpperCase);\n    nameCharts.push(secondChartUpperCase);\n    return nameCharts;\n}\n\nasync function postContactData(path = \"\", data) {\n    try {\n        let response = await fetch(BASE_URL + path + \".json\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: data\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n    } catch (error) {\n        console.error(\"Error setting data in database:\", error);\n    }\n}\n\nasync function setContactToFirebase(name, email, phone, nameCharts, contactColor) {\n    let contactData = {\n        \"name\": name,\n        \"email\": email,\n        \"phone\": phone,\n        \"nameCharts\": nameCharts,\n        \"contactColor\": contactColor,\n    };\n    let contactDataAsString = JSON.stringify(contactData);\n    await postContactData(\"contacts\", contactDataAsString);\n}\n\nfunction clearContactRendering() {\n    for (let i = 0; i < alphabet.length; i++) {\n        document.getElementById(`contactList-${alphabet[i]}`).innerHTML ='';\n    }\n}\n\nasync function fetchContacts() {\n    await loadContacts(\"/contacts\");\n    clearContactRendering();\n    for (let contactID in localContactArray) {\n        let element = localContactArray[contactID];\n        let name = element.name;\n        let mail = element.email;\n        let nameCharts = element.nameCharts;\n        let color = element.contactColor;\n        let contactAlphabetElement = document.getElementById(`contactList-${nameCharts[0]}`);\n        if (contactAlphabetElement.classList.contains(\"d-none\")) {\n            contactAlphabetElement.classList.remove(\"d-none\");\n        }\n        renderContacts(contactID, name, mail, nameCharts, color, contactAlphabetElement);\n    }\n\n}\n\nasync function loadContacts(path = \"\") {\n    let response = await fetch(BASE_URL + path + \".json\");\n    localContactArray = await response.json();\n}\n\n/**\n * Rendering the contact data into the HTML\n */\nasync function renderContacts(contactID, name, mail, nameCharts, color, contactAlphabetElement) {\n    contactAlphabetElement.innerHTML += /*html*/ `\n        <div id=\"contactDetailWrapper_${contactID}\" class=\"contactDetailWrapper\">\n            <ul class=\"namesList\" id=\"contactUlActive_${contactID}\" onclick=\"searchRenderPositionClickedContact('${contactID}')\">\n                <li id=\"contactItem_${contactID}\" class=\"contactItem\">\n                    <div class=\"innerContactDetailWrapper\">\n                        <div id=\"userProfile\">\n                        <div class=\"fc-white d-flex\">\n                    <p class=\"rounded-100 board-user-icon d-flex align-items-center justify-content-center ${color} -m-8\">${nameCharts[0]}${nameCharts[1]}</p>\n                    </div>\n                        </div>\n                        <div class=\"contact\">\n                            ${name}\n                            <br>\n                            <a href=\"mailto:${mail}\" target=\"_blank\" class=\"emailLink\">\n                                ${mail}\n                            </a>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    `;\n}\nfunction searchRenderPositionClickedContact(contactId) {\n    let testForOverlay = document.getElementById(\"contactsRight\");\n    renderClickedContact(contactId);\n    if (matchMedia`(max-width: 970px)`.matches) {\n        testForOverlay.classList.remove('max-w-970');\n        document.getElementById('contactRightHeadSection').classList.add('max-w-970');\n        document.getElementById('contactLeft').classList.add('max-w-970');\n        document.getElementById('contactRightHeadSectionMobile').classList.remove('d-none')\n    }\n}\n\nfunction renderClickedContact(contactID) {\n    let name = localContactArray[contactID]['name'];\n    let email = localContactArray[contactID]['email'];\n    let phone = localContactArray[contactID]['phone'];\n    let color = localContactArray[contactID]['contactColor'];\n    let nameCharts = localContactArray[contactID]['nameCharts'];\n    document.getElementById('renderedContactDetails').innerHTML = \"\";\n    document.getElementById(`renderedContactDetails`).classList.remove('d-none');\n    document.getElementById('renderedContactDetails').innerHTML += /*html*/ ` \n        <div id=\"contactSummary\">\n            <div id=\"contactTitle\">\n                <div id=\"contactAvatar\">\n                    <div class=\"credentialsCircle ${color}\" id=\"credentialsCircle\">\n                        ${nameCharts[0]}${nameCharts[1]}\n                    </div>\n                </div>\n                \n                <div id=\"editName\">\n                    <div class=\"currentName\">\n                        ${name}\n                    </div>\n                    <div id=\"editButtons\">\n                        <div id=\"editCurrentContact\" onclick=\"editContact('${contactID}')\">\n                            <img src=\"./img/icons/edit_icon.svg\" alt=\"edit\">\n                            Edit\n                        </div>\n                        \n                        <div id=\"deleteCurrentContact\" onclick=\"deleteContactEverywhere('${contactID}')\">\n                            <img src=\"./img/icons/delete_icon.svg\" alt=\"delete\">\n                            Delete\n                        </div>\n                    </div>\n                </div>                \n            </div>\n        </div>\n        \n        <div id=\"contactDetails\">\n            <p>Contact Information</p>\n            <div id=\"contactDetailMail\">\n                <b>Email:</b>\n                <br>\n                <br>\n                <a href=\"mailto:${email}\" class=\"mailLink\">${email}</a>\n            </div>\n            <div id=\"contactDetailPhone\">\n                <b>Phone:</b>\n                <br>\n                <br>\n                <a href=\"tel:${phone}\" class=\"phoneLink\">${phone}</a>\n            </div>\n        </div>\n        <div  class=\"iconCircleContactPosition\">\n        <div id=\"contact-Navbar\" class=\"contact-navbar-position d-none\">\n            <div class=\"contact-navbar\">\n                    <div id=\"editCurrentContact\" onclick=\"editContact('${contactID}')\">\n                        <img src=\"./img/icons/edit_icon.svg\" alt=\"edit\">\n                        Edit\n                    </div>\n                        \n                    <div id=\"deleteCurrentContact\" onclick=\"deleteContactEverywhere('${contactID}')\">\n                        <img src=\"./img/icons/delete_icon.svg\" alt=\"delete\">\n                        Delete\n                    </div>\n                </div>\n        </div>\n            <div class=\"iconCircleContact\">\n                <img src=\"./img/icons/three_points_With.png\" onclick=\"contactNavbarOpenClose()\" alt=\"\">\n            </div>\n        </div>\n    `;\n}\n\nfunction contactNavbarOpenClose() {\n    let navbarOpenOrClose = document.getElementById(\"contact-Navbar\");\n    if (hasClass(navbarOpenOrClose,'d-none')) {\n        navbarOpenOrClose.classList.remove(\"d-none\");\n        isContactOverlayJustOpened = true;\n        setTimeout(() => { isContactOverlayJustOpened = false; }, 100);\n    } else {\n        navbarOpenOrClose.classList.add(\"d-none\");\n    }\n}\n\nfunction openAddContactOverlay() {\n    let overlay = document.getElementById('contactOverlay');\n    overlay.classList.remove('d-none');\n    isContactOverlayJustOpened = true;\n    setTimeout(() => { isContactOverlayJustOpened = false; }, 100);\n}\n\nfunction closeContactOverlay(event) {\n    document.getElementById('contactOverlay').classList.add('d-none');\n}\n\nfunction activeContact() {\n    const navLinkEls = document.querySelectorAll('.contactDetailWrapper');\n\n    navLinkEls.forEach(navLinkEl => {\n        navLinkEl.addEventListener('click', () => {\n            document.querySelector('.activeContact')?.classList.remove('activeContact');\n            navLinkEl.classList.add('activeContact');\n        })\n    });\n}\n\nfunction clearNewContactForm() {\n    document.getElementById('newContactName').value = '';\n    document.getElementById('newContactMail').value = '';\n    document.getElementById('newContactPhone').value = '';\n    closeContactOverlay();\n}\n\nasync function editContact(contactId = \"\") {\n    var form = document.getElementById(\"createNewContactForm\");\n    form.onsubmit = null;\n    form.onsubmit = function () {\n        return editContactToFirebase(event, contactId);\n    };\n    var deleteButtenExistContact = document.getElementById(\"clearNewContact\");\n    deleteButtenExistContact.onclick = null;\n    deleteButtenExistContact.onclick = function () {\n        return deleteContactEverywhere(contactId);\n    };\n    await renderEditContactsOverlay(contactId);\n    openAddContactOverlay();\n}\n\nasync function renderEditContactsOverlay(contactId) {\n    await loadContacts(\"/contacts\");\n    let name = localContactArray[contactId]['name'];\n    let email = localContactArray[contactId]['email'];\n    let phone = localContactArray[contactId]['phone'];\n    let color = localContactArray[contactId]['contactColor'];\n    let nameCharts = localContactArray[contactId]['nameCharts'];\n    document.getElementById(\"newContactName\").value = name;\n    document.getElementById(\"newContactMail\").value = email;\n    document.getElementById(\"newContactPhone\").value = phone;\n    document.getElementById(\"clearNewContact\").innerHTML = /*html*/ `Delete`\n    document.getElementById(\"avatar\").innerHTML =  /*html*/ `<div id=\"contactAvatar\">\n    <div class=\"credentialsCircle ${color}\" id=\"credentialsCircle\">\n        ${nameCharts[0]}${nameCharts[1]}\n    </div>\n</div>`\n    document.getElementById(\"createNewContact\").innerHTML = /*html*/ `Save\n        <img src=\"./img/icons/check-icon.png\"  class=\"createTaskButtonImg\" alt=\"check_icon\">`\n    document.getElementById(\"contactOverlayLeft\").innerHTML = /*html*/ `<img src=\"./img/join-logo-contacts.png\" alt=\"join-logo\" class=\"contactJoinLogo\">\n    <h1>Edit contact</h1>\n    <img src=\"./img/icons/blue-borderLine.png\" alt=\"blue-border\">`\n    document.getElementById(\"contactOverlayLeftMobile\").innerHTML = /*html*/ `<h1>Edit contact</h1>\n        <img src=\"./img/icons/blue-borderLine.png\" alt=\"blue-border\">`\n}\n\nasync function editContactToFirebase(event, contactId) {\n    event.preventDefault(event);\n    localContactArray[contactId]['name'] = document.getElementById('newContactName').value;\n    localContactArray[contactId]['email'] = document.getElementById('newContactMail').value;\n    localContactArray[contactId]['phone'] = document.getElementById('newContactPhone').value;\n    localContactArray[contactId]['nameCharts'] = splitName(localContactArray[contactId]['name']);\n    let dataAsStringify = JSON.stringify(localContactArray[contactId]);\n    await updateTask(dataAsStringify, `/contacts/${contactId}`)\n    clearNewContactForm();\n    closeContactOverlay(event);\n    fetchContacts();\n    searchRenderPositionClickedContact(contactId);\n}\n\nasync function deleteContactEverywhere(contactID) {\n    await searchContactsInTasks(contactID);\n    await deleteContact(contactID);\n}\n\nasync function searchContactsInTasks(contactID) {\n    let tasks = await loadTasks(\"/board/tasks\");\n    let contactIsInTask = false;\n    for (const taskId in tasks) {\n        contactIsInTask = false;\n        const element = tasks[taskId];\n        let contactsInTask = element.selectContacts;\n        for (const activeContactCount in contactsInTask) {\n            let activeContactId = contactsInTask[activeContactCount];\n            if (contactID == activeContactId) {\n                contactIsInTask = true;\n                contactsInTask.splice(activeContactCount, 1);\n            }\n        }\n        let elementAsStringify = JSON.stringify(element);\n        updateTask(elementAsStringify, `/board/tasks/${taskId}`)\n    }\n}\n\nasync function deleteContact(contactToDelete) {\n    try {\n        let response = await fetch(BASE_URL + \"/contacts/\" + contactToDelete + \".json\", {\n            method: 'DELETE',\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n    }\n    catch (error) {\n        console.error(\"Error delete data in database:\", error);\n    }\n    fetchContacts();\n    document.getElementById('renderedContactDetails').innerHTML = \"\";\n    document.getElementById(`renderedContactDetails`).classList.remove('d-none');\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/contact.js b/js/contact.js
--- a/js/contact.js	(revision 10bb45c4781c7cdfdb68de9e5e1e94bfd45cc93c)
+++ b/js/contact.js	(date 1727637444522)
@@ -1,9 +1,9 @@
 /* Local variables */
 let localContactArray;
-let alphabet = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']
+let alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
 /**
  * Creates new Contact-Data and saves them to the Database
- * @function addContact
+ * @function addContact 
  */
 async function addContact(event) {
     event.preventDefault(event);
@@ -14,9 +14,23 @@
     nameCharts = splitName(contactName);
     let contactColor = setColor();
     await setContactToFirebase(contactName, contactMail, contactPhone, nameCharts, contactColor);
-    clearNewContactForm();
-    closeContactOverlay(event);
-    fetchContacts();
+    closeContactOverlay();
+    await fetchContacts();
+    surcheRenderPositionClickedContact(contactId);
+}
+
+async function addContactMobile(event) {
+    event.preventDefault(event);
+    let contactName = document.getElementById('newContactNameMobile').value;
+    let contactMail = document.getElementById('newContactMailMobile').value;
+    let contactPhone = document.getElementById('newContactPhoneMobile').value;
+    let nameCharts = [];
+    nameCharts = splitName(contactName);
+    let contactColor = setColor();
+    await setContactToFirebase(contactName, contactMail, contactPhone, nameCharts, contactColor);
+    closeContactOverlay();
+    await fetchContacts();
+    surcheRenderPositionClickedContact(contactId);
 }
 
 function setColor() {
@@ -99,26 +113,27 @@
 
 function clearContactRendering() {
     for (let i = 0; i < alphabet.length; i++) {
-        document.getElementById(`contactList-${alphabet[i]}`).innerHTML ='';
+        document.getElementById(`contactListContent-${alphabet[i]}`).innerHTML = '';
     }
 }
 
 async function fetchContacts() {
-    await loadContacts("/contacts");
+    let contacts =  await loadTasks("/contacts");
+    localStorage.usableContacts = JSON.stringify(contacts);
     clearContactRendering();
-    for (let contactID in localContactArray) {
-        let element = localContactArray[contactID];
+    for (let contactID in contacts) {
+        let element = contacts[contactID];
         let name = element.name;
         let mail = element.email;
         let nameCharts = element.nameCharts;
         let color = element.contactColor;
         let contactAlphabetElement = document.getElementById(`contactList-${nameCharts[0]}`);
+        let contactAlphabetContentElement = document.getElementById(`contactListContent-${nameCharts[0]}`);
         if (contactAlphabetElement.classList.contains("d-none")) {
             contactAlphabetElement.classList.remove("d-none");
         }
-        renderContacts(contactID, name, mail, nameCharts, color, contactAlphabetElement);
+        renderContacts(contactID, name, mail, nameCharts, color, contactAlphabetContentElement);
     }
-
 }
 
 async function loadContacts(path = "") {
@@ -129,10 +144,10 @@
 /**
  * Rendering the contact data into the HTML
  */
-async function renderContacts(contactID, name, mail, nameCharts, color, contactAlphabetElement) {
-    contactAlphabetElement.innerHTML += /*html*/ `
+async function renderContacts(contactID, name, mail, nameCharts, color, contactAlphabetContentElement) {
+    contactAlphabetContentElement.innerHTML += /*html*/ `
         <div id="contactDetailWrapper_${contactID}" class="contactDetailWrapper">
-            <ul class="namesList" id="contactUlActive_${contactID}" onclick="searchRenderPositionClickedContact('${contactID}')">
+            <ul class="namesList" id="contactUlActive_${contactID}" onclick="surcheRenderPositionClickedContact('${contactID}')">
                 <li id="contactItem_${contactID}" class="contactItem">
                     <div class="innerContactDetailWrapper">
                         <div id="userProfile">
@@ -153,7 +168,8 @@
         </div>
     `;
 }
-function searchRenderPositionClickedContact(contactId) {
+
+function surcheRenderPositionClickedContact(contactId) {
     let testForOverlay = document.getElementById("contactsRight");
     renderClickedContact(contactId);
     if (matchMedia`(max-width: 970px)`.matches) {
@@ -165,11 +181,13 @@
 }
 
 function renderClickedContact(contactID) {
-    let name = localContactArray[contactID]['name'];
-    let email = localContactArray[contactID]['email'];
-    let phone = localContactArray[contactID]['phone'];
-    let color = localContactArray[contactID]['contactColor'];
-    let nameCharts = localContactArray[contactID]['nameCharts'];
+    let contacts = JSON.parse(localStorage.getItem("usableContacts"));
+    let contact = contacts[contactID];
+    let name = contact['name'];
+    let email = contact['email'];
+    let phone = contact['phone'];
+    let color = contact['contactColor'];
+    let nameCharts = contact['nameCharts'];
     document.getElementById('renderedContactDetails').innerHTML = "";
     document.getElementById(`renderedContactDetails`).classList.remove('d-none');
     document.getElementById('renderedContactDetails').innerHTML += /*html*/ ` 
@@ -215,22 +233,23 @@
                 <a href="tel:${phone}" class="phoneLink">${phone}</a>
             </div>
         </div>
-        <div  class="iconCircleContactPosition">
-        <div id="contact-Navbar" class="contact-navbar-position d-none">
-            <div class="contact-navbar">
-                    <div id="editCurrentContact" onclick="editContact('${contactID}')">
-                        <img src="./img/icons/edit_icon.svg" alt="edit">
-                        Edit
-                    </div>
+        <div  class="iconCircleContactPosition" onclick="contactNavbarOpenClose()">
+            <div id="contact-Navbar" class="contact-navbar-position d-none">
+                <div class="contact-navbar">
+                        <div id="editCurrentContact" onclick="editContact('${contactID}')">
+                            <img src="./img/icons/edit_icon.svg" alt="edit">
+                            Edit
+                        </div>
                         
-                    <div id="deleteCurrentContact" onclick="deleteContactEverywhere('${contactID}')">
-                        <img src="./img/icons/delete_icon.svg" alt="delete">
-                        Delete
-                    </div>
-                </div>
-        </div>
-            <div class="iconCircleContact">
-                <img src="./img/icons/three_points_With.png" onclick="contactNavbarOpenClose()" alt="">
+                        <div id="deleteCurrentContact" onclick="deleteContactEverywhere('${contactID}')">
+                            <img src="./img/icons/delete_icon.svg" alt="delete">
+                            Delete
+                        </div>
+                    </div>
+                </div>
+                <div class="iconCircleContact">
+                    <img src="./img/icons/three_points_With.png" onclick="contactNavbarOpenClose()" alt="">
+                </div>
             </div>
         </div>
     `;
@@ -238,7 +257,7 @@
 
 function contactNavbarOpenClose() {
     let navbarOpenOrClose = document.getElementById("contact-Navbar");
-    if (hasClass(navbarOpenOrClose,'d-none')) {
+    if (hasClass(navbarOpenOrClose, 'd-none')) {
         navbarOpenOrClose.classList.remove("d-none");
         isContactOverlayJustOpened = true;
         setTimeout(() => { isContactOverlayJustOpened = false; }, 100);
@@ -254,8 +273,9 @@
     setTimeout(() => { isContactOverlayJustOpened = false; }, 100);
 }
 
-function closeContactOverlay(event) {
+function closeContactOverlay() {
     document.getElementById('contactOverlay').classList.add('d-none');
+    clearNewContactForm();
 }
 
 function activeContact() {
@@ -269,65 +289,262 @@
     });
 }
 
+function clearNewContactFormNotClose() {
+    document.getElementById("newContactNameMobile").innerHTML = '';
+    document.getElementById("newContactMailMobile").innerHTML = '';
+    document.getElementById("newContactPhoneMobile").innerHTML = '';
+    document.getElementById("newContactName").innerHTML = '';
+    document.getElementById("newContactMail").innerHTML = '';
+    document.getElementById("newContactPhone").innerHTML = '';
+}
+
 function clearNewContactForm() {
-    document.getElementById('newContactName').value = '';
-    document.getElementById('newContactMail').value = '';
-    document.getElementById('newContactPhone').value = '';
-    closeContactOverlay();
+    document.getElementById('contactOverlay').innerHTML='';
+    document.getElementById('contactOverlay').innerHTML= `<div id="contactOverlayWrapperMobile" class="contactOverlayWrapperMobile">
+                        <div id="contactWrapperTop" class="contactWrapperTop">
+                            <div class="closeMobile">
+                                <img src="./img/icons/cancel-logo-white.png" alt="cancel" class="close-img"
+                                    onclick="closeContactOverlay()">
+                            </div>
+
+                            <div id="contactOverlayMobileTop" class="contactOverlayMobileTop">
+                                <h1>Add contact</h1>
+                                <p>Tasks are better with a team!</p>
+                                <img src="./img/icons/blue-borderLine.png" alt="blue-border">
+                            </div>
+                        </div>
+
+                        <div id="contactWrapperBottom" class="contactWrapperBottom">
+                            <div id="contactOverlayMobileBottom" class="contactOverlayMobileBottom">
+                                <form onsubmit="addContactMobile(event)" id="createNewContactFormMobile">
+                                    <div id="addContactFormAvatarMobile" class="addContactFormAvatarMobile">
+                                        <div class="avatar" id="avatarMobile">
+                                            <img src="./img/icons/contactAvatar.png" alt="avatar" class="avatar-img">
+                                        </div>
+                                        <div class="addContactFormMobile">
+                                            <input type="text" id="newContactNameMobile" class="icon-person"
+                                                pattern="^[A-Za-z]+ [A-Za-z]+$" title="Firstname Space Name"
+                                                placeholder="Name" required>
+                                            <label for="newContactNameMobile"></label>
+
+                                            <input type="email" id="newContactMailMobile" class="icon-letter"
+                                                placeholder="Mail" required>
+                                            <label for="newContactMailMobile"></label>
+
+                                            <input type="text" id="newContactPhoneMobile" class="icon-phone"
+                                                placeholder="Phone" required>
+                                            <label for="newContactPhoneMobile"></label>
+                                        </div>
+                                    </div>
+
+                                    <div class="createContact" id="createNewContactMobile">
+                                        <div class="createContactButton">
+                                            <button id="clearNewContactMobile" class="clearNewContact" type="button"
+                                                onclick="clearNewContactFormNotClose()">
+                                                Cancel
+                                                <img src="./img/icons/cancel-logo.png" class="createTaskButtonImg"
+                                                    alt="cancel_logo">
+                                            </button>
+
+                                            <button id="createNewContactMobile" class="createNewContact">
+                                                Create Contact
+                                                <img src="./img/icons/check-icon.png" class="createTaskButtonImg"
+                                                    alt="check_icon">
+                                            </button>
+                                        </div>
+                                    </div>
+                                </form>
+                            </div>
+                        </div>
+                    </div>
+
+                    <div id="contactOverlayWrapper" class="contactOverlayWrapper">
+                        <div id="contactOverlayLeft" class="contactOverlayLeft">
+                            <img src="./img/join-logo-contacts.png" alt="join-logo" class="contactJoinLogo">
+                            <h1>Add contact</h1>
+                            <p>Tasks are better with a team!</p>
+                            <img src="./img/icons/blue-borderLine.png" alt="blue-border">
+                        </div>
+
+                        <div id="contactOverlayRight" class="contactOverlayRight">
+                            <div class="close">
+                                <img src="./img/icons/cancel-logo.png" alt="cancel" class="close-img"
+                                    onclick="closeContactOverlay(event)">
+                            </div>
+
+                            <div id="contactOverlayLeftMobile" class="contactOverlayLeftMobile">
+                                <div class="innerContactOverlayLeftMobile" id="innerContactOverlayLeftMobile">
+                                    <h1>Add contact</h1>
+                                    <p>Tasks are better with a team!</p>
+                                    <img src="./img/icons/blue-borderLine.png" alt="blue-border">
+                                </div>
+                            </div>
+
+                            <form onsubmit="addContact(event)" id="createNewContactForm">
+                                <div id="addContactFormAvatar" class="addContactFormAvatar">
+                                    <div class="avatar" id="avatar">
+                                        <img src="./img/icons/contactAvatar.png" alt="avatar" class="avatar-img">
+                                    </div>
+                                    <div class="addContactForm">
+                                        <input type="text" id="newContactName" class="icon-person"
+                                            pattern="^[A-Za-z]+ [A-Za-z]+$" title="Firstname Space Name"
+                                            placeholder="Name" required>
+
+                                        <input type="email" id="newContactMail" class="icon-letter" placeholder="Mail"
+                                            required>
+
+                                        <input type="text" id="newContactPhone" class="icon-phone" placeholder="Phone"
+                                            required>
+                                    </div>
+                                </div>
+
+                                <div class="createContact" id="createNewContact">
+                                    <div class="spaceDivContacts">
+                                        &nbsp;
+                                    </div>
+                                    <div class="createContactButton">
+                                        <button id="clearNewContact" class="clearNewContact" type="button"
+                                            onclick="clearNewContactFormNotClose()">
+                                            Cancel
+                                            <img src="./img/icons/cancel-logo.png" class="createTaskButtonImg"
+                                                alt="cancel_logo">
+                                        </button>
+
+                                        <button id="createNewContact" class="createNewContact">
+                                            Create Contact
+                                            <img src="./img/icons/check-icon.png" class="createTaskButtonImg"
+                                                alt="check_icon">
+                                        </button>
+                                    </div>
+                                </div>
+                            </form>
+                        </div>
+                    </div>`;
 }
 
-async function editContact(contactId = "") {
+async function editContact(contactId) {
     var form = document.getElementById("createNewContactForm");
     form.onsubmit = null;
-    form.onsubmit = function () {
-        return editContactToFirebase(event, contactId);
-    };
-    var deleteButtenExistContact = document.getElementById("clearNewContact");
-    deleteButtenExistContact.onclick = null;
-    deleteButtenExistContact.onclick = function () {
-        return deleteContactEverywhere(contactId);
+    form.onsubmit = function (event) {
+        event.preventDefault();
+        return editContactToFirebase(contactId);
     };
     await renderEditContactsOverlay(contactId);
+    await editContactMobile(contactId);
     openAddContactOverlay();
 }
 
+async function editContactMobile(contactId) {
+    var form = document.getElementById("createNewContactFormMobile");
+    form.onsubmit = null;
+    form.onsubmit = function (event) {
+        event.preventDefault();
+        return editContactToFirebaseMobile(contactId);
+    };
+    await renderEditContactsOverlayMobile(contactId);
+}
+
 async function renderEditContactsOverlay(contactId) {
-    await loadContacts("/contacts");
-    let name = localContactArray[contactId]['name'];
-    let email = localContactArray[contactId]['email'];
-    let phone = localContactArray[contactId]['phone'];
-    let color = localContactArray[contactId]['contactColor'];
-    let nameCharts = localContactArray[contactId]['nameCharts'];
-    document.getElementById("newContactName").value = name;
-    document.getElementById("newContactMail").value = email;
-    document.getElementById("newContactPhone").value = phone;
-    document.getElementById("clearNewContact").innerHTML = /*html*/ `Delete`
+    let contacts = JSON.parse(localStorage.getItem("usableContacts"));
+    let contact = contacts[contactId];
+    let color = contact['contactColor'];
+    let nameCharts = contact['nameCharts'];
+    document.getElementById("newContactName").value = contact['name'];
+    document.getElementById("newContactMail").value = contact['email'];
+    document.getElementById("newContactPhone").value = contact['phone'];
     document.getElementById("avatar").innerHTML =  /*html*/ `<div id="contactAvatar">
     <div class="credentialsCircle ${color}" id="credentialsCircle">
         ${nameCharts[0]}${nameCharts[1]}
     </div>
 </div>`
-    document.getElementById("createNewContact").innerHTML = /*html*/ `Save
-        <img src="./img/icons/check-icon.png"  class="createTaskButtonImg" alt="check_icon">`
+document.getElementById("createNewContact").innerHTML = /*html*/`<div class="createContactButton">
+                                            <button id="clearNewContactMobile" class="clearNewContact" type="button"
+                                                onclick="deleteContactEverywhere('${contactId}')">
+                                                Delete
+                                            </button>
+
+                                            <button id="createNewContactMobile" class="createNewContact">
+                                            Save
+                                            <img src="./img/icons/check-icon.png"  class="createTaskButtonImg" alt="check_icon">
+                                            </button>
+                                        </div>`;
     document.getElementById("contactOverlayLeft").innerHTML = /*html*/ `<img src="./img/join-logo-contacts.png" alt="join-logo" class="contactJoinLogo">
     <h1>Edit contact</h1>
-    <img src="./img/icons/blue-borderLine.png" alt="blue-border">`
+    <img src="./img/icons/blue-borderLine.png" alt="blue-border">`;
+}
+
+async function renderEditContactsOverlayMobile(contactId) {
+    let contacts = JSON.parse(localStorage.getItem("usableContacts"));
+    let contact = contacts[contactId];
+    let color = contact['contactColor'];
+    let nameCharts = contact['nameCharts'];
+    document.getElementById("newContactNameMobile").value = contact['name'];
+    document.getElementById("newContactMailMobile").value = contact['email'];
+    document.getElementById("newContactPhoneMobile").value = contact['phone'];
     document.getElementById("contactOverlayLeftMobile").innerHTML = /*html*/ `<h1>Edit contact</h1>
         <img src="./img/icons/blue-borderLine.png" alt="blue-border">`
+    document.getElementById("avatarMobile").innerHTML =  /*html*/ `<div id="contactAvatarMobile">
+        <div class="credentialsCircle ${color}" id="credentialsCircle">
+        ${nameCharts[0]}${nameCharts[1]}
+    </div>
+</div>`;
+        document.getElementById("createNewContactMobile").innerHTML = /*html*/`<div class="createContactButton">
+        <button id="clearNewContactMobile" class="clearNewContact" type="button"
+            onclick="deleteContactEverywhere('${contactId}')">
+            delete
+        </button>
+    
+        <button id="createNewContactMobile" class="createNewContact">
+        Save
+        <img src="./img/icons/check-icon.png"  class="createTaskButtonImg" alt="check_icon">
+        </button>
+    </div>`;
+}
+
+async function editContactToFirebase(contactId) {
+    let contacts = JSON.parse(localStorage.getItem("usableContacts"));
+    let contact = contacts[contactId];
+    contact["name"] = document.getElementById('newContactName').value;
+    contact["email"] = document.getElementById('newContactMail').value;
+    contact["phone"] = document.getElementById('newContactPhone').value;
+    contact["nameCharts"] = splitName(contact['name']);
+    let dataAsStringify = JSON.stringify(contact);
+    await updateContact(dataAsStringify, `contacts/${contactId}`);
+    closeContactOverlay();
+    await fetchContacts();
+    renderClickedContact(contactId);
 }
 
-async function editContactToFirebase(event, contactId) {
-    event.preventDefault(event);
-    localContactArray[contactId]['name'] = document.getElementById('newContactName').value;
-    localContactArray[contactId]['email'] = document.getElementById('newContactMail').value;
-    localContactArray[contactId]['phone'] = document.getElementById('newContactPhone').value;
-    localContactArray[contactId]['nameCharts'] = splitName(localContactArray[contactId]['name']);
-    let dataAsStringify = JSON.stringify(localContactArray[contactId]);
-    await updateTask(dataAsStringify, `/contacts/${contactId}`)
-    clearNewContactForm();
-    closeContactOverlay(event);
-    fetchContacts();
-    searchRenderPositionClickedContact(contactId);
+async function editContactToFirebaseMobile(contactId) {
+    let contacts = JSON.parse(localStorage.getItem("usableContacts"));
+    let contact = contacts[contactId];
+    contact["name"] = document.getElementById('newContactNameMobile').value;
+    contact["email"] = document.getElementById('newContactMailMobile').value;
+    contact["phone"] = document.getElementById('newContactPhoneMobile').value;
+    contact["nameCharts"] = splitName(contact['name']);
+    let dataAsStringify = JSON.stringify(contact);
+    await updateContact(dataAsStringify, `contacts/${contactId}`);
+    closeContactOverlay();
+    await fetchContacts();
+    renderClickedContact(contactId);
+}
+
+async function updateContact(element,path="") {
+    try {
+        let response = await fetch(BASE_URL + path + ".json", {
+            method: 'PUT',
+            headers: {
+                'Content-Type': 'application/json'
+            },
+            body: element
+        });
+        if (!response.ok) {
+            console.error(`Error status: ${response.status}`);
+            throw new Error(`HTTP error! status: ${response.status}`);
+        }
+    } catch (error) {
+        console.error("Error PUT data in database:", error);
+    }
 }
 
 async function deleteContactEverywhere(contactID) {
@@ -350,13 +567,13 @@
             }
         }
         let elementAsStringify = JSON.stringify(element);
-        updateTask(elementAsStringify, `/board/tasks/${taskId}`)
+        updateTask(elementAsStringify, `board/tasks/${taskId}`)
     }
 }
 
 async function deleteContact(contactToDelete) {
     try {
-        let response = await fetch(BASE_URL + "/contacts/" + contactToDelete + ".json", {
+        let response = await fetch(BASE_URL + "contacts/" + contactToDelete + ".json", {
             method: 'DELETE',
         });
         if (!response.ok) {
@@ -366,7 +583,7 @@
     catch (error) {
         console.error("Error delete data in database:", error);
     }
-    fetchContacts();
     document.getElementById('renderedContactDetails').innerHTML = "";
     document.getElementById(`renderedContactDetails`).classList.remove('d-none');
+    await fetchContacts();
 }
\ No newline at end of file
Index: js/board.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>let cardDraggedId;\nlet countOnToDo = 0;\nlet countOnInProgress = 0;\nlet countOnAwaitFeedback = 0;\nlet countOnDone = 0;\nlet subtaskCount = 0;\nlet subtaskCountInProzent = 0;\nlet subtaskCountProvement = 0;\n\nfunction allowDrop(ev) {\n    ev.preventDefault();\n}\n\nfunction drag(id) {\n    cardDraggedId = id;\n}\n\nasync function drop(dropPosition) {\n    let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    let dropCard = tasks[cardDraggedId];\n    reduceDroppedElement(dropCard[\"position\"]);\n    dropCard[\"position\"] = dropPosition;\n    let elementAsStringify = JSON.stringify(dropCard);\n    await updateTask(elementAsStringify,`/board/tasks/${cardDraggedId}`);\n    countOnToDo = 0;\n    countOnInProgress = 0;\n    countOnAwaitFeedback = 0;\n    countOnDone = 0;\n    renderAllTasks();\n}\n\nasync function updateTask(element,path=\"\") {\n    try {\n        let response = await fetch(baseUrl + path + \".json\", {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: element\n        }); \n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n    }  catch (error) {\n        console.error(\"Error PUT data in database:\", error);\n    }\n}\n\n\nasync function changeTask(event,taskId=\"\") {\n    event.preventDefault(event);\n    let task = JSON.parse(localStorage.getItem(\"activeTask\"));\n    task[\"title\"] = document.getElementById('title').value;\n    task[\"description\"] = document.getElementById('description').value;\n    task[\"selectContacts\"] = selectContacts;\n    task[\"datePicker\"] = document.getElementById('datePicker').value;\n    task[\"priority\"] = prio;\n    if (subtasklist.length >  0) {\n        task[\"subtasks\"] = subtasklist;\n        task[\"subtask\"] = subtaskProofments;\n    }\n    let taskAsStringify = JSON.stringify(task);\n    await updateTask(taskAsStringify,`/board/tasks/${taskId}`);\n    closeTaskOverlay();\n}\n\n\nfunction removeDraggedCard() {\n    const element = document.getElementById(cardDraggedId);\n    element.remove();\n}\n\nfunction reduceDroppedElement(elementPosition) {\n    switch (elementPosition) {\n        case \"board-task-on-to-do\":\n            countOnToDo--;\n            break;\n        case \"board-task-on-in-progress\":\n            countOnInProgress--;\n            break;\n        case \"board-task-on-await-feedback\":\n            countOnAwaitFeedback--;\n            break;\n        case \"board-task-on-done\":\n            countOnDone--;\n            break;\n    }\n\n}\n\nfunction findeTask(value) {\n    let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    let contacts = JSON.parse(localStorage.getItem(\"usableContacts\"));\n    let filter = value.toUpperCase();\n    cleanTaskboard();\n    for (let taskId in tasks) {\n        let element = tasks[taskId];\n        let titleTest = element.title;\n        let descriptionTest = element.description;\n            if (titleTest.toUpperCase().indexOf(filter) > -1) {\n                renderFindeTask(element, taskId, contacts);\n                } else {\n                    if (descriptionTest.toUpperCase().indexOf(filter) > -1) {\n                        renderFindeTask(element, taskId, contacts);\n                }\n            }\n        }\n            noTasksInProgress();\n}\n\nfunction renderFindeTask(element, taskId, contacts) {\n    let subtask = subtaskExist(element);\n    let categoryText = categoryFinder(element);\n    countForNoTask(element.position);\n    renderTask(element, taskId, subtask, categoryText);\n    for (let contact in element.selectContacts) {\n        let activeContactId = element.selectContacts[contact];\n        let activeContact = contacts[activeContactId];\n        renderActiveContacts(activeContact, activeContactId, taskId);\n        }\n        subtaskCount = 0;\n    \n}\n\nfunction noTasksInProgress() {\n    if (countOnToDo != 0) {\n        addNoTaskInProgress(\"no-tasks-to-do\");\n    }else {\n        removeNoTaskInProgress(\"no-tasks-to-do\");\n    }\n    if (countOnInProgress != 0) {\n        addNoTaskInProgress(\"no-tasks-in-progress\");\n    }else {\n        removeNoTaskInProgress(\"no-tasks-in-progress\");\n    }\n    if (countOnAwaitFeedback != 0) {\n        addNoTaskInProgress(\"no-tasks-await-feedback\");\n    }else {\n        removeNoTaskInProgress(\"no-tasks-await-feedback\");\n    }\n    if (countOnDone != 0) {\n        addNoTaskInProgress(\"no-tasks-Done\");\n    }else {\n        removeNoTaskInProgress(\"no-tasks-Done\");\n    }\n}\n\nfunction addNoTaskInProgress(taskInProgress = \"\") {\n    let element = document.getElementById(taskInProgress);\n    element.classList.add(\"d-none\");\n}\n\nfunction removeNoTaskInProgress(taskInProgress = \"\") {\n    let element = document.getElementById(taskInProgress);\n    element.classList.remove(\"d-none\");\n}\n\nasync function loadTasks(path=\"\") {\n    let response = await fetch(baseUrl + path + \".json\");\n    return await response.json();\n}\n\nfunction cleanTaskboard() {\n    document.getElementById(\"board-task-on-to-do\").innerHTML = '';\n    document.getElementById(\"board-task-on-in-progress\").innerHTML = '';\n    document.getElementById(\"board-task-on-await-feedback\").innerHTML = '';\n    document.getElementById(\"board-task-on-done\").innerHTML = '';\n    countOnToDo = 0;\n    countOnInProgress = 0;\n    countOnAwaitFeedback = 0;\n    countOnDone = 0;\n}\n\nasync function renderAllTasks() {\n    let tasks = await loadTasks(\"/board/tasks\");\n    localStorage.tasks = JSON.stringify(tasks);\n    let contacts =  await loadTasks(\"/contacts\");\n    localStorage.usableContacts = JSON.stringify(contacts);\n    cleanTaskboard();\n    for (let taskId in tasks) {\n        let element = tasks[taskId];\n        let subtask = subtaskExist(element);\n        let categoryText = categoryFinder(element);\n        countForNoTask(element.position);\n        renderTask(element, taskId, subtask, categoryText);\n        for (let contact in element.selectContacts) {\n            let activeContactId = element.selectContacts[contact];\n            let activeContact = contacts[activeContactId];\n                renderActiveContacts(activeContact, activeContactId, taskId);\n        }\n        subtaskCount = 0;\n    }\n    noTasksInProgress();\n}\n\nfunction subtaskExist(task) {\n    let subtask = \" \";\n    let testingSubtask = task.subtasks;\n    if (typeof testingSubtask !== 'undefined' && testingSubtask) {\n        subtaskCounter(task);\n    }else {\n        subtask = \"d-none\";\n    }\n    return subtask;\n}\n\nfunction subtaskCounter(task) {\n    let subtask = task.subtasks;\n    subtaskProofments = task.subtask;\n    subtaskCount = 0;\n    let i = 0;\n    subtaskCountProvement = 0;\n    for (const element of subtask) {\n        if (subtaskProofments[i] == 'true') {\n            subtaskCountProvement++;\n        }\n        i++;\n        subtaskCount++;\n    }\n    subtaskCountInProzent = 100 / subtaskCount * subtaskCountProvement;\n}\n\nfunction categoryFinder(task) {\n    let categoryText = \"\";\n    if (task.categorySelect == \"technical-task\") {\n        categoryText = \"Technical Task\";\n    } else {\n        categoryText = \"User Story\";\n    }\n    return categoryText;\n}\n\nfunction countForNoTask(positionFromCard) {\n    switch (positionFromCard) {\n        case \"board-task-on-to-do\":\n            countOnToDo++;\n            break;\n        case \"board-task-on-in-progress\":\n            countOnInProgress++;\n            break;\n        case \"board-task-on-await-feedback\":\n            countOnAwaitFeedback++;\n            break;\n        case \"board-task-on-done\":\n            countOnDone++;\n            break;\n    }\n}\n\nasync function deleteTask(event, taskId) {\n    event.preventDefault(event);\n    try {\n    let response = await fetch(baseUrl + \"/board/tasks/\" + taskId + \".json\", {\n        method: 'DELETE',\n    });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n    } catch (error) {\n        console.error(\"Error delete data in database:\", error);\n    }\n    closeTaskOverlay();\n}\n\nfunction renderActiveContacts(activeContact, contactId, taskId) {\n    document.getElementById(\"selectContent\"+taskId).innerHTML += `\n    <p class=\"rounded-100 board-user-icon d-flex align-items-center justify-content-center ${activeContact.contactColor} -m-8\" id=\"${contactId}\">${activeContact.nameCharts[0]}${activeContact.nameCharts[1]}</p>\n    `\n}\n\nfunction renderTask(task, taskId, subtask, categoryText) {\n    document.getElementById(task.position).innerHTML += `\n        <div id=\"${taskId}\" onclick=\"openTaskOverlay('${taskId}')\" ondragstart=\"drag('${taskId}')\" draggable=\"true\" class=\"d-flex board-task-card flex-column\">\n            <div class=\"d-flex align-items-center\">\n                <p class=\"fc-white rounded-8 board-user d-flex align-items-center ${task.categorySelect}\" id=\"categoryTitle\">${categoryText}</p>\n            </div>\n            <div>\n                <p class=\"board-card-subtitle\" id=\"\">${task.title}</p>\n            </div>\n            <div>\n                <p class=\"board-description\" id=\"\">${task.description}</p>\n            </div>\n            <div class=\"d-flex align-items-center gap-10 ${subtask}\" id=\"board-done-progressbar\">\n                <div class=\"board-progressbar-full rounded-8\">\n                    <div class=\"board-progressbar rounded-8\" style=\"width: ${subtaskCountInProzent}%;\">\n                    </div>\n                </div>\n                <div class=\"d-flex board-subtasks gap-4\">\n                  <p> ${subtaskCountProvement}/${subtaskCount}</p>\n                  <p>Subtasks</p>\n                </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n                <div class=\"fc-white d-flex\" id=\"selectContent${taskId}\">\n                </div>\n                <div class=\"board-icon-importance board-icon-${task.priority}-prio\">\n                </div>\n            </div>\n        </div>\n    `;\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/board.js b/js/board.js
--- a/js/board.js	(revision 10bb45c4781c7cdfdb68de9e5e1e94bfd45cc93c)
+++ b/js/board.js	(date 1727637444518)
@@ -21,7 +21,7 @@
     reduceDroppedElement(dropCard["position"]);
     dropCard["position"] = dropPosition;
     let elementAsStringify = JSON.stringify(dropCard);
-    await updateTask(elementAsStringify,`/board/tasks/${cardDraggedId}`);
+    await updateTask(elementAsStringify,`board/tasks/${cardDraggedId}`);
     countOnToDo = 0;
     countOnInProgress = 0;
     countOnAwaitFeedback = 0;
@@ -31,17 +31,18 @@
 
 async function updateTask(element,path="") {
     try {
-        let response = await fetch(baseUrl + path + ".json", {
+        let response = await fetch(BASE_URL + path + ".json", {
             method: 'PUT',
             headers: {
                 'Content-Type': 'application/json'
             },
             body: element
-        }); 
+        });
         if (!response.ok) {
+            console.error(`Error status: ${response.status}`);
             throw new Error(`HTTP error! status: ${response.status}`);
         }
-    }  catch (error) {
+    } catch (error) {
         console.error("Error PUT data in database:", error);
     }
 }
@@ -60,7 +61,7 @@
         task["subtask"] = subtaskProofments;
     }
     let taskAsStringify = JSON.stringify(task);
-    await updateTask(taskAsStringify,`/board/tasks/${taskId}`);
+    await updateTask(taskAsStringify,`board/tasks/${taskId}`);
     closeTaskOverlay();
 }
 
Index: contacts.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    \n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/style.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/contact.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/addTask.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/responsive.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/mobile.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/custom-variables.css\">\n    \n    <link rel=\"icon\" type=\"image/png\" href=\"img/join_logo.png\">\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap\" rel=\"stylesheet\">\n    \n    <script src=\"js/script.js\"></script>\n    <script src=\"js/summary.js\"></script>\n    <script src=\"/js/add_task.js\"></script>\n    <script src=\"/js/renderTaskOverlay.js\"></script>\n    <script src=\"js/board.js\"></script>\n    <script src=\"js/template.js\"></script>\n    <script src=\"js/contact.js\"></script>\n    <title>Join - Contacts</title>\n</head>\n\n<body onload=\"init(4); fetchContacts();\">\n    <div id=\"bodyWrapper\" class=\"bodyWrapper\">\n        <div id=\"sideBarWrapper\" class=\"sideBarWrapper\">\n            <div w3-include-html=\"./templates/sidebar.html\" id=\"sideBarContainer\" class=\"d-none\"></div>\n            <div w3-include-html=\"./templates/sidebarNoUser.html\" id=\"sidebarNoUserContainer\" class=\"d-none\"></div>\n        </div>\n        \n        <div id=\"centerWrapper\" class=\"centerWrapper contactsMainWrapper\">\n            <div w3-include-html=\"./templates/header.html\" id=\"header\"></div>\n            \n            <div id=\"contactsMain\">\n                <div id=\"contactLeft\">\n                    <div class=\"newContactButton max-w-670\">\n                        <button id=\"newContact\" type=\"button\" onclick=\"openAddContactOverlay()\">\n                            Add new contact\n                            <div class=\"addNewContactIcon\"></div>\n                        </button>\n                    </div>\n                    <div class=\"contactListWithButton\">\n                        <div  class=\"iconCircleContactPosition\" onclick=\"openAddContactOverlay()\">\n                            <div class=\"iconCircleContact\">\n                                <img src=\"./img/icons/person_add.png\" alt=\"\">\n                            </div>\n                        </div>\n                        \n                        <div id=\"contactListWrapper\" class=\"contactListWrapper\">\n                            <div id=\"contactList-A\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    A\n                                </h2>\n                            </div>\n                            <div id=\"contactList-B\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    B\n                                </h2>\n                            </div>\n                            <div id=\"contactList-C\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    C\n                                </h2>\n                            </div>\n                            <div id=\"contactList-D\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    D\n                                </h2>\n                            </div>\n                            <div id=\"contactList-E\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    E\n                                </h2>\n                            </div>\n                            <div id=\"contactList-F\" class=\"contactList d-none\" style=\"color: black\">\n                                <h2 class=\"contactLetter\">\n                                    F\n                                </h2>\n                            </div>\n                            <div id=\"contactList-G\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    G\n                                </h2>\n                            </div>\n                            <div id=\"contactList-H\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    H\n                                </h2>\n                            </div>\n                            <div id=\"contactList-I\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    I\n                                </h2>\n                            </div>\n                            <div id=\"contactList-J\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    J\n                                </h2>\n                            </div>\n                            <div id=\"contactList-K\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    K\n                                </h2>\n                            </div>\n                            <div id=\"contactList-L\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    L\n                                </h2>\n                            </div>\n                            <div id=\"contactList-M\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    M\n                                </h2>\n                            </div>\n                            <div id=\"contactList-N\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    N\n                                </h2>\n                            </div>\n                            <div id=\"contactList-O\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    O\n                                </h2>\n                            </div>\n                            <div id=\"contactList-P\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    P\n                                </h2>\n                            </div>\n                            <div id=\"contactList-Q\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    Q\n                                </h2>\n                            </div>\n                            <div id=\"contactList-R\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    R\n                                </h2>\n                            </div>\n                            <div id=\"contactList-S\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    S\n                                </h2>\n                            </div>\n                            <div id=\"contactList-T\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    T\n                                </h2>\n                            </div>\n                            <div id=\"contactList-U\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    U\n                                </h2>\n                            </div>\n                            <div id=\"contactList-V\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    V\n                                </h2>\n                            </div>\n                            <div id=\"contactList-W\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    W\n                                </h2>\n                            </div>\n                            <div id=\"contactList-X\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    X\n                                </h2>\n                            </div>\n                            <div id=\"contactList-Y\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    Y\n                                </h2>\n                            </div>\n                            <div id=\"contactList-Z\" class=\"contactList d-none\">\n                                <h2 class=\"contactLetter\">\n                                    Z\n                                </h2>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                    \n                    <div id=\"contactsRight\" class=\"max-w-970\">\n                        <div id=\"contactRightHeadSection\">\n                            <div class=\"contactHeadline\">\n                                <h1>Contacts</h1>\n                            </div>\n                        <div class=\"spacerDiv\">&nbsp;</div>\n                        <div class=\"slogan\">\n                            Better with a team\n                        </div>\n                    </div>\n                    \n                    <div id=\"contactRightHeadSectionMobile\" class=\"d-flex align-items-center justify-content-between min-w-970 d-none\">\n                        <div>\n                            <div class=\"contactHeadline m-b-16 \">\n                                <h2>Contacts</h2>\n                            </div>\n                            <div class=\"slogan m-b-16\">\n                                Better with a team\n                            </div>\n                            <div class=\"spacerDivLying m-b-64\">\n                            \n                            </div>\n                        </div>\n                        \n                        <div>\n                            <a href=\"./contacts.html\">\n                                <img src=\"./img/icons/arrow-left-blue.png\" class=\"backArrow\" alt=\"allow left\">\n                            </a>\n                        </div>\n                    </div>\n                    <div id=\"renderedContactDetails\" class=\"d-none\">\n                    </div>\n                </div>\n                \n                <div id=\"contactOverlay\" class=\"contactOverlay\">\n                    <div id=\"contactOverlayWrapper\" class=\"contactOverlayWrapper\">\n                        <div id=\"contactOverlayLeft\" class=\"contactOverlayLeft\">\n                            <div class=\"close\">\n                                <img src=\"./img/icons/cancel-logo.png\" alt=\"cancel\" class=\"close-img\" onclick=\"closeContactOverlay(event)\">\n                            </div>\n                            <div class=\"innerContactOverlayLeftContent\">\n                                <img src=\"./img/join-logo-contacts.png\" alt=\"join-logo\" class=\"contactJoinLogo\">\n                                <h1>Add contact</h1>\n                                <p>Tasks are better with a team!</p>\n                                <img src=\"./img/icons/blue-borderLine.png\" alt=\"blue-border\">\n                            </div>\n                        </div>\n                        \n                        <div id=\"contactOverlayRight\" class=\"contactOverlayRight\">\n                            <div class=\"close\">\n                                <img src=\"./img/icons/cancel-logo.png\" alt=\"cancel\" class=\"close-img\" onclick=\"closeContactOverlay(event)\">\n                            </div>\n                            \n                            <div class=\"formWrapper\">\n                                <form onsubmit=\"addContact(event)\" id=\"createNewContactForm\">\n                                    <div id=\"addContactFormAvatar\" class=\"addContactFormAvatar\">\n                                        <div class=\"avatar\" id=\"avatar\">\n                                            <img src=\"./img/icons/contactAvatar.png\" alt=\"avatar\" class=\"avatar-img\">\n                                        </div>\n                                        <div class=\"addContactForm\">\n                                            <input type=\"text\" id=\"newContactName\" class=\"icon-person\" pattern=\"^[A-Za-z]+ [A-Za-z]+$\" title=\"Firstname Space Name\" placeholder=\"Name\" required>\n                                            <label for=\"newContactName\"></label>\n                                            \n                                            <input type=\"email\" id=\"newContactMail\" class=\"icon-letter\" placeholder=\"Mail\" required>\n                                            <label for=\"newContactMail\"></label>\n                                            \n                                            <input type=\"text\" id=\"newContactPhone\" class=\"icon-phone\" placeholder=\"Phone\" required>\n                                            <label for=\"newContactPhone\"></label>\n                                        </div>\n                                    </div>\n                                    \n                                    <div class=\"createContact\">\n                                        <div class=\"spaceDivContacts\">\n                                            &nbsp;\n                                        </div>\n                                        <div class=\"createContactButton\">\n                                            <button id=\"clearNewContact\" class=\"clearNewContact\" type=\"button\" onclick=\"clearNewContactForm()\">\n                                                Cancel\n                                                <img src=\"./img/icons/cancel-logo.png\"  class=\"createTaskButtonImg\" alt=\"cancel_logo\">\n                                            </button>\n                                            \n                                            <button id=\"createNewContact\" class=\"createNewContact\">\n                                                Create Contact\n                                                <img src=\"./img/icons/check-icon.png\"  class=\"createTaskButtonImg\" alt=\"check_icon\">\n                                            </button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>                \n            </div>\n        </div>\n        \n        <div w3-include-html=\"./templates/mobile-menu.html\" id=\"mobileNavBar\"></div>\n    </div>\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/contacts.html b/contacts.html
--- a/contacts.html	(revision 10bb45c4781c7cdfdb68de9e5e1e94bfd45cc93c)
+++ b/contacts.html	(date 1727637986874)
@@ -221,7 +221,7 @@
                     </div>
                 </div>
                 
-                <div id="contactOverlay" class="contactOverlay">
+                <div id="contactOverlay" class="contactOverlay d-none">
                     <div id="contactOverlayWrapper" class="contactOverlayWrapper">
                         <div id="contactOverlayLeft" class="contactOverlayLeft">
                             <div class="close">
Index: index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/style.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/responsive.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/mobile.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"assets/custom-variables.css\">\n\n    <link rel=\"icon\" type=\"image/png\" href=\"img/join_logo.png\">\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap\" rel=\"stylesheet\">\n\n\n    <script src=\"js/script.js\"></script>\n    <script src=\"js/summary.js\"></script>\n    <script src=\"/js/add_task.js\"></script>\n    <script src=\"/js/register.js\"></script>\n    <script src=\"/js/renderTaskOverlay.js\"></script>\n    <script src=\"js/board.js\"></script>\n    <script src=\"js/template.js\"></script>\n    <script src=\"js/login.js\"></script>\n    <title>Join - Summary</title>\n</head>\n\n<body onload=\"init(1); summaryOnLoad()\">\n    <div id=\"bodyWrapper\" class=\"bodyWrapper\">\n        <div id=\"sideBarWrapper\" class=\"sideBarWrapper\">\n            <div w3-include-html=\"./templates/sidebar.html\" id=\"sideBarContainer\" class=\"d-none\"></div>\n            <div w3-include-html=\"./templates/sidebarNoUser.html\" id=\"sidebarNoUserContainer\" class=\"d-none\"></div>\n        </div>\n\n        <div id=\"centerWrapper\" class=\"centerWrapper\">\n            <div w3-include-html=\"./templates/header.html\" id=\"header\"></div>\n\n            <!-- Join Title -->\n            <div class=\"d-flex flex-column\" id=\"index-centerBox\">\n                <div class=\"summary-title-box\" id=\"innerCenterBox1\">\n                    <h1 class=\"summary-title-large\">Join 360</h1>\n                    <div class=\"summary-title-line\">&nbsp;</div>\n                    <h3 class=\"summary-title-small\">Key Metrics at a Glance</h3>\n                </div>\n                \n                <div class=\"summary-title-box\" id=\"innerCenterBoxMobile\">\n                    <h1 class=\"summary-title-large\">Join 360</h1>\n                    <h3 class=\"summary-title-small\">Key Metrics at a Glance</h3>\n                    <div class=\"summary-title-line-mobile\">&nbsp;</div>\n                </div>\n                \n                <div class=\"align-items-center d-flex\" id=\"innerCenterBox2\">\n                    <div class=\"d-flex flex-column summary-button-box justify-content-between\" id=\"summary-button-box\">\n                        <div class=\"summary-button-size-large d-flex justify-content-between\" id=\"button-row1\">\n                            <a href=\"./board.html\" class=\"text-decoration-none summary-button-color rounded-30\">\n                                <div class=\"d-flex align-items-center justify-content-center summary-button-size-medium summary-todo\">\n                                    <div class=\"p-10\">\n                                        <div class=\"summary-todo-icon\"></div>\n                                    </div>\n                                    <div class=\"d-flex flex-column align-items-center\">\n                                        <div>\n                                            <h1 class=\"summary-button-number\" id=\"summary-toDo\">\n                                                1\n                                            </h1>\n                                        </div>\n                                        <div>\n                                            <p class=\"summary-button-text-medium\">To-Do</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </a>\n                            <a href=\"./board.html\" class=\"text-decoration-none summary-button-color rounded-30\">\n                                <div class=\"d-flex justify-content-center align-items-center summary-button-size-medium summary-done\">\n                                    <div class=\"p-10\">\n                                        <div class=\"summary-done-icon\"></div>\n                                    </div>\n                                    <div class=\"d-flex flex-column align-items-center\">\n                                        <div>\n                                            <h1 class=\"summary-button-number\" id=\"summary-done\">\n                                                1\n                                            </h1>\n                                        </div>\n                                        <div>\n                                            <p class=\"summary-button-text-medium\">Done</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                        <!-- datum container -->\n                        <a href=\"./board.html\" class=\"text-decoration-none summary-button-color rounded-30\" id=\"button-row2\">\n                            <div class=\"d-flex align-items-center justify-content-evenly summary-button-size-large\" id=\"dateContainer\">\n                                <div>\n                                    <div class=\"d-flex align-items-center justify-content-center\">\n                                        <div class=\"d-flex p-10\">\n                                            <img src=\"img/icons/urgent_colored_icon.png\" alt=\"urgent_icon\">\n                                        </div>\n                                        <div class=\"d-flex flex-column align-items-center justify-content-center\">\n                                            <div>\n                                                <h1 class=\"d-flex summary-button-number\" id=\"summary-urgent\">\n                                                    1\n                                                </h1>\n                                            </div>\n                                            <div>\n                                                <p class=\"summary-button-text-small\">Urgent</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"d-flex summary-line\">\n                                </div>\n                                <div class=\"d-flex flex-column\">\n                                    <div>\n                                        <p class=\"summary-date\">\n                                            October 20th, 2024\n                                        </p>\n                                    </div>\n                                    <div>\n                                        <p class=\"summary-button-text-small summary-date-text\">\n                                            Upcoming Deadline\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </a>\n                        <div class=\"align-items-center summary-button-size-large d-flex justify-content-between\" id=\"button-row3\">\n                            <!-- done container -->\n                            <a href=\"./board.html\"\n                               class=\"text-decoration-none summary-button-color rounded-30\">\n                                <div class=\"d-flex align-items-center flex-column justify-content-center summary-button-size-small\">\n                                    <div>\n                                        <h1 class=\"summary-button-number\" id=\"summary-all-tasks\">\n                                            5\n                                        </h1>\n                                    </div>\n                                    <div class=\"summary-button-width-text\">\n                                        <p class=\"summary-button-text-medium\">\n                                            Tasks in Board\n                                        </p>\n                                    </div>\n                                </div>\n                            </a>\n                            <a href=\"./board.html\"\n                               class=\"text-decoration-none summary-button-color rounded-30\">\n                                <div class=\"d-flex flex-column align-items-center justify-content-center summary-button-size-small\">\n                                    <div>\n                                        <h1 class=\"summary-button-number\" id=\"summary-taskInProgress\">\n                                            2\n                                        </h1>\n                                    </div>\n                                    <div class=\"summary-button-width-text\">\n                                        <p class=\"summary-button-text-medium\">\n                                            Tasks In Progress\n                                        </p>\n                                    </div>\n                                </div>\n                            </a>\n                            <a href=\"./board.html\"\n                               class=\"text-decoration-none summary-button-color rounded-30\">\n                                <div class=\"d-flex align-items-center flex-column justify-content-center summary-button-size-small\">\n                                    <div>\n                                        <h1 class=\"summary-button-number\" id=\"summary-awaitFeedback\">\n                                            2\n                                        </h1>\n                                    </div>\n                                    <div class=\"summary-button-width-text\">\n                                        <p class=\"summary-button-text-medium\">\n                                            Awaiting Feedback\n                                        </p>\n                                    </div>\n                                </div>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"welcome-text\" id=\"userName\">\n                        <h3 class=\"summary-greeting\" id=\"summary-time\"></h3>\n                        <h2 class=\"summary-greeting-name\" id=\"summary-user\"></h2>\n                    </div>\n                </div>\n                \n                <div w3-include-html=\"./templates/mobile-menu.html\" id=\"mobileNavBar\"></div>\n            </div>\n        </div>\n    </div>\n\n</body>\n\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/index.html b/index.html
--- a/index.html	(revision 10bb45c4781c7cdfdb68de9e5e1e94bfd45cc93c)
+++ b/index.html	(date 1727637444512)
@@ -62,7 +62,6 @@
                                     <div class="d-flex flex-column align-items-center">
                                         <div>
                                             <h1 class="summary-button-number" id="summary-toDo">
-                                                1
                                             </h1>
                                         </div>
                                         <div>
@@ -79,7 +78,6 @@
                                     <div class="d-flex flex-column align-items-center">
                                         <div>
                                             <h1 class="summary-button-number" id="summary-done">
-                                                1
                                             </h1>
                                         </div>
                                         <div>
@@ -100,7 +98,7 @@
                                         <div class="d-flex flex-column align-items-center justify-content-center">
                                             <div>
                                                 <h1 class="d-flex summary-button-number" id="summary-urgent">
-                                                    1
+                                                    
                                                 </h1>
                                             </div>
                                             <div>
@@ -113,7 +111,7 @@
                                 </div>
                                 <div class="d-flex flex-column">
                                     <div>
-                                        <p class="summary-date">
+                                        <p id="upComingDeatline" class="summary-date">
                                             October 20th, 2024
                                         </p>
                                     </div>
@@ -132,7 +130,6 @@
                                 <div class="d-flex align-items-center flex-column justify-content-center summary-button-size-small">
                                     <div>
                                         <h1 class="summary-button-number" id="summary-all-tasks">
-                                            5
                                         </h1>
                                     </div>
                                     <div class="summary-button-width-text">
@@ -147,7 +144,6 @@
                                 <div class="d-flex flex-column align-items-center justify-content-center summary-button-size-small">
                                     <div>
                                         <h1 class="summary-button-number" id="summary-taskInProgress">
-                                            2
                                         </h1>
                                     </div>
                                     <div class="summary-button-width-text">
@@ -162,7 +158,6 @@
                                 <div class="d-flex align-items-center flex-column justify-content-center summary-button-size-small">
                                     <div>
                                         <h1 class="summary-button-number" id="summary-awaitFeedback">
-                                            2
                                         </h1>
                                     </div>
                                     <div class="summary-button-width-text">
Index: js/register.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>let emailCheck = 0;\nlet nameCheck = 0;\n\nfunction checkName(name) {\n    nameCheck = 0;\n    for (const user in localUser) {\n        if (Object.hasOwnProperty.call(localUser, user)) {\n            const userCheck = localUser[user];\n            if (userCheck.name == name.value) {\n                nameCheck = 1;\n            }\n        }\n    }\n    if (nameCheck == 1) {\n        document.getElementById('massageBoxName').classList.remove(\"d-none\");\n        name.classList.add(\"alert-filled\");\n        name.classList.add(\"m-0\");\n    } \n}\n\nfunction checkEmail(email) {\n    emailCheck = 0;\n    for (const user in localUser) {\n        if (Object.hasOwnProperty.call(localUser, user)) {\n            const userCheck = localUser[user];\n            if (userCheck.email === email.value) {\n                emailCheck = 1;\n            }\n        }\n    }\n    if (emailCheck == 1) {\n        document.getElementById('massageBoxEmail').classList.remove(\"d-none\");\n        email.classList.add(\"alert-filled\");\n        email.classList.add(\"m-0\");\n    }\n}\n\nfunction alertClassRemove(element, massageBox) {\n    element.classList.remove(\"alert-filled\");\n    element.classList.remove(\"m-0\");\n    document.getElementById(`${massageBox}`).classList.add(\"d-none\");\n}\n\nasync function addUser(event) {\n    event.preventDefault();\n    let password = document.getElementById(\"password\");\n    let passwordConfirm = document.getElementById(\"passwordConfirm\");\n    let name = document.getElementById(\"name\");\n    let email = document.getElementById(\"email\");\n    checkName(name);\n    checkEmail(email);\n    if (nameCheck == 1) {\n    } else {\n        if (emailCheck == 1) {\n        } else {\n            if (password.value === passwordConfirm.value) {\n                localStorage.setItem(\"activeUserName\", `${name.value}`);\n                localStorage.setItem(\"ableToUse\", true);\n                await setToFirebase(name.value,email.value,password.value);  \n            } else {   \n                document.getElementById('massageBox').classList.remove(\"d-none\");\n                passwordConfirm.classList.add(\"alert-filled\");\n                passwordConfirm.classList.add(\"m-0\");\n            }   \n        }       \n    }\n}\n\nasync function setToFirebase(name,email,password) {\n    let userData = {\n        \"name\": name,\n        \"email\": email,\n        \"password\": password\n    };\n    await postUserData('users', userData);\n}\n\nfunction clearRegisterForm() {\n    document.getElementById(\"password\").value = '';\n    document.getElementById(\"passwordConfirm\").value = '';\n    document.getElementById(\"email\").value = '';\n    document.getElementById(\"name\").value = '';\n}\n\nasync function postUserData(path = \"\", data) {\n    try {\n        let response = await fetch(BASE_URL + path + \".json\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        window.location.href = '../index.html';\n    } catch (error) {\n        console.error('Es gab einen Fehler beim Posten der Benutzerdaten:', error);\n    }\n}\n\nfunction buttonEnabler() {\n    const name = document.getElementById(\"name\");\n    const email = document.getElementById(\"email\");\n    const password = document.getElementById(\"password\");\n    const confirmPassword = document.getElementById(\"passwordConfirm\");\n    const signUpBtn = document.getElementById(\"signUp\");\n    const checkBox = document.getElementById(\"registerCheckbox\");\n    \n    addEventListener(\"submit\", event => {\n        if (name.value.length <= 0 && email.value.length <= 0 && password.value.length <= 0 && confirmPassword.value.length <= 0 && checkBox.checked === false) {\n            signUpBtn.disabled = true;\n            //console.log(\"Angekommen\")\n        }\n        else {\n            confirmPassword.addEventListener(\"keyup\", ()=> {\n                signUpBtn.classList.remove(\"disabledButton\");\n                signUpBtn.disabled = false;\n            })\n        }\n    })\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/register.js b/js/register.js
--- a/js/register.js	(revision 10bb45c4781c7cdfdb68de9e5e1e94bfd45cc93c)
+++ b/js/register.js	(date 1727637444527)
@@ -112,7 +112,6 @@
     addEventListener("submit", event => {
         if (name.value.length <= 0 && email.value.length <= 0 && password.value.length <= 0 && confirmPassword.value.length <= 0 && checkBox.checked === false) {
             signUpBtn.disabled = true;
-            //console.log("Angekommen")
         }
         else {
             confirmPassword.addEventListener("keyup", ()=> {
Index: js/summary.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>let urgentCount = 0;\nlet taskCount = 0;\n\nasync function summaryOnLoad(){\n    let tasks = await loadTasks(\"/board/tasks\");\n    localStorage.tasks = JSON.stringify(tasks);\n    for (let taskId in tasks) {\n        let element = tasks[taskId];\n        urgentCounting(element.priority);\n        countForNoTask(element.position);\n        taskCount++;\n    }\n    renderTaskCounts();\n    let activeUserName = localStorage.getItem(\"activeUserName\");\n    let greet = summaryGetTime();\n    renderUserGreeting(greet, activeUserName);\n    taskCount=0;\n    urgentCount=0;\n    countOnToDo = 0;\n    countOnInProgress = 0;\n    countOnAwaitFeedback = 0;\n    countOnDone = 0;\n}\n\nfunction urgentCounting(priority) {\n    if (priority == 'urgent'){\n        urgentCount++;\n    }\n}\n\nfunction summaryGetTime() {\n    const d = new Date();\n    let hours = d.getHours();\n    let greet;\n    if (hours >= 0 && hours < 12) {\n        greet = 'Good morning';\n    } else if (hours >= 12 && hours < 18) {\n        greet = 'good afternoon';\n    } else {\n        greet = 'Good evening';\n    }\n    return greet;\n}\n\nfunction renderTaskCounts() {\n    document.getElementById('summary-toDo').innerHTML =`${countOnToDo}`;\n    document.getElementById('summary-done').innerHTML =`${countOnDone}`;\n    document.getElementById('summary-urgent').innerHTML =`${urgentCount}`;\n    document.getElementById('summary-all-tasks').innerHTML =`${taskCount}`;\n    document.getElementById('summary-taskInProgress').innerHTML =`${countOnInProgress}`;\n    document.getElementById('summary-awaitFeedback').innerHTML =`${countOnAwaitFeedback}`;\n}\n\nfunction renderUserGreeting(greet, activeUserName) {\n    document.getElementById('summary-time').innerHTML = `${greet}`;\n    document.getElementById('summary-user').innerHTML = `${activeUserName}`;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/summary.js b/js/summary.js
--- a/js/summary.js	(revision 10bb45c4781c7cdfdb68de9e5e1e94bfd45cc93c)
+++ b/js/summary.js	(date 1727637444535)
@@ -1,19 +1,20 @@
 let urgentCount = 0;
 let taskCount = 0;
+let earliestTask = null;
+let earliestDate = null;
 
 async function summaryOnLoad(){
     let tasks = await loadTasks("/board/tasks");
     localStorage.tasks = JSON.stringify(tasks);
-    for (let taskId in tasks) {
-        let element = tasks[taskId];
-        urgentCounting(element.priority);
-        countForNoTask(element.position);
-        taskCount++;
-    }
+    taskCountAndDataFinde(tasks);
     renderTaskCounts();
     let activeUserName = localStorage.getItem("activeUserName");
     let greet = summaryGetTime();
     renderUserGreeting(greet, activeUserName);
+    clearCounter();
+}
+
+function clearCounter() {
     taskCount=0;
     urgentCount=0;
     countOnToDo = 0;
@@ -22,6 +23,25 @@
     countOnDone = 0;
 }
 
+function taskCountAndDataFinde(tasks) {
+    earliestDate = null;
+    for (let taskId in tasks) {
+        let element = tasks[taskId];
+        urgentCounting(element.priority);
+        countForNoTask(element.position);
+        checkDate(element.datePicker);
+        taskCount++;
+    }
+    earliestDate = earliestDate.toJSON().slice(0,10);
+}
+
+function checkDate(datePicker) {
+    let taskDate = new Date(datePicker);
+    if (earliestDate === null || taskDate < earliestDate) {
+        earliestDate = taskDate; 
+    }
+}
+
 function urgentCounting(priority) {
     if (priority == 'urgent'){
         urgentCount++;
@@ -49,6 +69,7 @@
     document.getElementById('summary-all-tasks').innerHTML =`${taskCount}`;
     document.getElementById('summary-taskInProgress').innerHTML =`${countOnInProgress}`;
     document.getElementById('summary-awaitFeedback').innerHTML =`${countOnAwaitFeedback}`;
+    document.getElementById('upComingDeatline').innerHTML =`${earliestDate}`;
 }
 
 function renderUserGreeting(greet, activeUserName) {
Index: js/script.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//Firebase Realtime-Database URL\nconst BASE_URL = \"https://remotestorage-join189-default-rtdb.europe-west1.firebasedatabase.app/\";\nasync function init(i) {\n    let ableToUse = JSON.parse(localStorage.getItem(\"ableToUse\"));\n    if (ableToUse === false){\n        await includeHTMLNoUser();\n    }else {\n        await includeHTML();}\n    let sidebarlinkCovered = document.getElementById(`sidebarlink-${i}`);\n    sidebarlinkCovered.classList.add(`bgActiveMenu`);\n    if (i<=4){\n        let futter = document.getElementById(`sidebarLinkMobile-${i}`);\n        futter.classList.add(`bgActiveMenu`);\n    }\n}\n\nfunction testingUser() {\n    let ableToUse = JSON.parse(localStorage.getItem(\"ableToUse\"));\n    if (ableToUse === false){\n        var link = document.getElementById(\"backLink\");\n        link.setAttribute('href', \"../login.html\");\n    }\n}\n\ndocument.addEventListener('keydown', evt => {\n    if (evt.key === 'Escape') {\n        let closeOpenAddTaskOverlay = document.getElementById('addTaskOverlay');\n        if (closeOpenAddTaskOverlay && !closeOpenAddTaskOverlay.classList.contains(\"d-none\")) {\n            closeAddTaskOverlay();\n        }\n\n        let closeOpenTaskOverlay = document.getElementById('taskOverlay');\n        if (closeOpenTaskOverlay && !closeOpenTaskOverlay.classList.contains(\"d-none\")) {\n            closeTaskOverlay();\n        }\n\n        let closeOpenContactOverlay = document.getElementById('contactOverlayWrapper');\n        if (closeOpenContactOverlay && !closeOpenContactOverlay.classList.contains(\"d-none\")) {\n            closeContactOverlay(evt);\n        }\n    }\n});\n\ndocument.addEventListener('click', function(event) {\n    let addTaskOverlay = document.getElementById('addTaskOverlay');\n    let typeOnAddTaskOverlay = document.getElementById('outerTaskOverlayWrapper');\n    if (addTaskOverlay && !addTaskOverlay.classList.contains('d-none')) {\n        if (!typeOnAddTaskOverlay.contains(event.target) && !isAddTaskOverlayJustOpened) {\n            closeAddTaskOverlay();\n        }\n    }\n    let taskOverlay = document.getElementById('taskOverlay');\n    let typeOnTaskOverlay = document.getElementById('taskOverlayWrapper');\n    if (taskOverlay && !taskOverlay.classList.contains('d-none')) {\n        if (!typeOnTaskOverlay.contains(event.target) && !isTaskOverlayJustOpened) {\n            closeTaskOverlay();\n        }\n    }\n    let closeOpenContactOverlay = document.getElementById('contactOverlay');\n    let typeOnContactOverlay = document.getElementById('contactOverlayWrapper');\n    let typeOnContactOverlayMobile = document.getElementById('contactOverlayWrapperMobile');\n    if (closeOpenContactOverlay && !closeOpenContactOverlay.classList.contains(\"d-none\")) {\n        if (document.documentElement.clientWidth > 1200) {\n            console.log('Greater!');\n                if (!typeOnContactOverlay.contains(event.target)&& !isContactOverlayJustOpened) {\n                    closeContactOverlay(event);\n          }\n        }else{\n            if (!typeOnContactOverlayMobile.contains(event.target)&& !isContactOverlayJustOpened) {\n                closeContactOverlay(event);\n            }\n        }\n    }\n    let navbarOpenOrClose = document.getElementById(\"header-Navbar\");\n    if (navbarOpenOrClose && !navbarOpenOrClose.classList.contains(\"d-none\")) {\n        if (!navbarOpenOrClose.contains(event.target)&& !isContactOverlayJustOpened) {\n            navbarOpenOrClose.classList.add(\"d-none\");\n        }\n    }\n    let contactNavbarOpenOrClose = document.getElementById(\"contact-Navbar\");\n    if (contactNavbarOpenOrClose && !contactNavbarOpenOrClose.classList.contains(\"d-none\")) {\n        if (!contactNavbarOpenOrClose.contains(event.target)&& !isContactOverlayJustOpened) {\n            contactNavbarOpenOrClose.classList.add(\"d-none\");\n        }\n    }\n});
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/script.js b/js/script.js
--- a/js/script.js	(revision 10bb45c4781c7cdfdb68de9e5e1e94bfd45cc93c)
+++ b/js/script.js	(date 1727637444531)
@@ -61,7 +61,6 @@
     let typeOnContactOverlayMobile = document.getElementById('contactOverlayWrapperMobile');
     if (closeOpenContactOverlay && !closeOpenContactOverlay.classList.contains("d-none")) {
         if (document.documentElement.clientWidth > 1200) {
-            console.log('Greater!');
                 if (!typeOnContactOverlay.contains(event.target)&& !isContactOverlayJustOpened) {
                     closeContactOverlay(event);
           }
Index: js/template.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>async function includeHTML() {\n    let includeElements = document.querySelectorAll('[w3-include-html]');\n    for (let i = 0; i < includeElements.length; i++) {\n        const element = includeElements[i];\n        //console.log(includeElements);\n        let file = element.getAttribute(\"w3-include-html\"); // \"includes/header.html\"\n        if (element.id === 'sideBarContainer' || element.id === 'header' || element.id ==='mobileNavBar') {\n            //console.log(\"element    : \", element);\n            let resp = await fetch(file);\n            if (resp.ok) {\n                element.innerHTML = await resp.text();\n            } else {\n                element.innerHTML = 'Page not found';\n            }\n        }\n    }\n    document.getElementById(\"sideBarContainer\").classList.remove(\"d-none\");\n}\n\nasync function includeHTMLNoUser() {\n    let includeElements = document.querySelectorAll('[w3-include-html]');\n    for (let i = 0; i < includeElements.length; i++) {\n        const element = includeElements[i];\n        //console.log(includeElements);\n        let file = element.getAttribute(\"w3-include-html\"); // \"includes/header.html\"\n        if (element.id === 'sidebarNoUserContainer' || element.id === 'header') {\n            //console.log(\"element    : \", element);\n            let resp = await fetch(file);\n            if (resp.ok) {\n                element.innerHTML = await resp.text();\n            } else {\n                element.innerHTML = 'Page not found';\n            }\n        }\n    }\n    document.getElementById(\"sidebarNoUserContainer\").classList.remove(\"d-none\");\n}\n\nfunction hasClass(element, className) {\n    return (' ' + element.className + ' ').indexOf(' ' + className+ ' ') > -1;\n}\n\nfunction templateNavbarOpenClose() {\n    let navbarOpenOrClose = document.getElementById(\"header-Navbar\");\n    if (hasClass(navbarOpenOrClose,'d-none')) {\n        navbarOpenOrClose.classList.remove(\"d-none\");\n        isContactOverlayJustOpened = true;\n    setTimeout(() => { isContactOverlayJustOpened = false; }, 100);\n    } else {\n        navbarOpenOrClose.classList.add(\"d-none\");\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/template.js b/js/template.js
--- a/js/template.js	(revision 10bb45c4781c7cdfdb68de9e5e1e94bfd45cc93c)
+++ b/js/template.js	(date 1727637444538)
@@ -2,10 +2,8 @@
     let includeElements = document.querySelectorAll('[w3-include-html]');
     for (let i = 0; i < includeElements.length; i++) {
         const element = includeElements[i];
-        //console.log(includeElements);
         let file = element.getAttribute("w3-include-html"); // "includes/header.html"
         if (element.id === 'sideBarContainer' || element.id === 'header' || element.id ==='mobileNavBar') {
-            //console.log("element    : ", element);
             let resp = await fetch(file);
             if (resp.ok) {
                 element.innerHTML = await resp.text();
@@ -21,10 +19,8 @@
     let includeElements = document.querySelectorAll('[w3-include-html]');
     for (let i = 0; i < includeElements.length; i++) {
         const element = includeElements[i];
-        //console.log(includeElements);
         let file = element.getAttribute("w3-include-html"); // "includes/header.html"
         if (element.id === 'sidebarNoUserContainer' || element.id === 'header') {
-            //console.log("element    : ", element);
             let resp = await fetch(file);
             if (resp.ok) {
                 element.innerHTML = await resp.text();
